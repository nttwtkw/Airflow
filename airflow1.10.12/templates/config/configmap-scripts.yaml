---
# Source: airflow/templates/config/configmap-scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-scripts
  labels:
    app: airflow
    chart: airflow-7.16.0
    release: airflow
    heritage: Helm
data:
  install-requirements.sh: |
    #!/bin/bash -e
    if [ ! -d "/opt/airflow/dags" ]; then
      echo 'No folder "/opt/airflow/dags"'
      exit 0
    fi

    cd "/opt/airflow/dags"
    if [ -f requirements.txt ]; then
      pip install --user -r requirements.txt
    else
      exit 0
    fi
  graceful-stop-celery-worker.sh: |
    #!/bin/bash -e
    echo "*** starting graceful worker shutdown"

    # set the required environment variables
    export AIRFLOW__CELERY__BROKER_URL=$(eval $AIRFLOW__CELERY__BROKER_URL_CMD)

    # prevent the worker accepting new tasks
    echo "*** preventing worker accepting new tasks"
    celery control --broker $AIRFLOW__CELERY__BROKER_URL --destination celery@$HOSTNAME cancel_consumer default
    sleep 5

    # loop until all active task are finished
    echo "*** waiting for active tasks to finish"
    while (( celery inspect --broker $AIRFLOW__CELERY__BROKER_URL --destination celery@$HOSTNAME --json active | python3 -c "import json; active_tasks = json.loads(input())['celery@$HOSTNAME']; print(len(active_tasks))" > 0 )); do
      sleep 10
    done
  preinit-db.sh: |
    #!/bin/bash
    echo "*** Waiting 10s for database"
    sleep 10

    COUNT=0
    while [ "${COUNT}" -lt 5 ]; do
      echo "*** upgrading airflow db"
      if airflow upgradedb || airflow db upgrade; then
        echo "*** upgradedb succeeded"
        exit 0
      else
        ((COUNT++))
        echo "*** upgradedb failed: waiting 5s before retry #${COUNT}"
        sleep 5
      fi
    done

    echo "*** upgradedb failed after ${COUNT} retries; failed."
    exit 1
