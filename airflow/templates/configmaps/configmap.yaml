---
# Source: airflow/templates/configmaps/configmap.yaml
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

################################
## Airflow ConfigMap
#################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflowv2-airflow-config
  labels:
    tier: airflow
    component: config
    release: airflowv2
    chart: "airflow-1.4.0"
    heritage: Helm
data:
  # These are system-specified config overrides.
  airflow.cfg: |-
    [api]
    auth_backend = airflow.api.auth.backend.deny_all
    
    [celery]
    worker_concurrency = 16
    
    [celery_kubernetes_executor]
    kubernetes_queue = kubernetes
    
    [core]
    colored_console_log = False
    dags_folder = /opt/airflow/dags/repo/
    executor = CeleryKubernetesExecutor
    load_examples = False
    remote_logging = False
    
    [elasticsearch]
    json_format = True
    log_id_template = {dag_id}_{task_id}_{execution_date}_{try_number}
    
    [elasticsearch_configs]
    max_retries = 3
    retry_timeout = True
    timeout = 30
    
    [kerberos]
    ccache = /var/kerberos-ccache/cache
    keytab = /etc/airflow.keytab
    principal = airflow@FOO.COM
    reinit_frequency = 3600
    
    [kubernetes]
    airflow_configmap = airflowv2-airflow-config
    airflow_local_settings_configmap = airflowv2-airflow-config
    multi_namespace_mode = False
    namespace = airflow
    pod_template_file = /opt/airflow/pod_templates/pod_template_file.yaml
    worker_container_repository = apache/airflow
    worker_container_tag = 2.2.3
    
    [logging]
    colored_console_log = False
    remote_logging = False
    
    [metrics]
    statsd_host = airflowv2-statsd
    statsd_on = True
    statsd_port = 9125
    statsd_prefix = airflow
    
    [scheduler]
    run_duration = 41460
    statsd_host = airflowv2-statsd
    statsd_on = True
    statsd_port = 9125
    statsd_prefix = airflow
    
    [webserver]
    enable_proxy_fix = True
    rbac = True
    
  airflow_local_settings.py: |
    
    
    from airflow.www.utils import UIAlert
    
    DASHBOARD_UIALERTS = [
      UIAlert(
        'Usage of a dynamic webserver secret key detected. We recommend a static webserver secret key instead.'
        ' See the <a href='
        '"https://airflow.apache.org/docs/helm-chart/stable/production-guide.html#webserver-secret-key">'
        'Helm Chart Production Guide</a> for more details.',
        category="warning",
        roles=["Admin"],
        html=True,
      )
    ]
  pod_template_file.yaml: |-

    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #   http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: dummy-name
      labels:
        tier: airflow
        component: worker
        release: airflowv2
    spec:
      containers:
        - envFrom:      
            []
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor      
            # Hard Coded Airflow Envs
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflowv2-fernet-key
                  key: fernet-key
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflowv2-airflow-metadata
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: airflowv2-airflow-metadata
                  key: connection
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflowv2-webserver-secret-key
                  key: webserver-secret-key
            # (Airflow 1.10.* variant)
            - name: AIRFLOW__CELERY__CELERY_RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  name: airflowv2-airflow-result-backend
                  key: connection
            - name: AIRFLOW__CELERY__RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  name: airflowv2-airflow-result-backend
                  key: connection
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: airflowv2-broker-url
                  key: connection      
            # Dynamically created environment variables
            # Dynamically created secret envs
            
            # Extra env
          image: apache/airflow:2.2.3
          imagePullPolicy: IfNotPresent
          name: base
          resources:
            {}
          volumeMounts:
            - mountPath: "/opt/airflow/logs"
              name: logs
            - name: config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/config/airflow_local_settings.py"
              subPath: airflow_local_settings.py
              readOnly: true
            - name: dags
              mountPath: /opt/airflow/dags
              readOnly: True
      restartPolicy: Never
      securityContext: 
        runAsUser: 50000
        fsGroup: 0
      nodeSelector: 
        {}
      affinity: 
        {}
      tolerations: 
        []
      serviceAccountName: airflowv2-worker
      volumes:
      - name: dags
        persistentVolumeClaim:
          claimName: airflowv2-dags
      - name: logs
        persistentVolumeClaim:
          claimName: airflowv2-logs
      - configMap:
          name: airflowv2-airflow-config
        name: config
